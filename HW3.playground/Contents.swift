import UIKit
//Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать чай (можно представить её в виде массива видов чая, которые хотят заказать). Необходимо последовательно выводить в консоль сколько заплатит покупатель (необходимо вывести его номер по порядку, чай, который он заказал и стоимость).
enum Tea: String {
    case green = "Green tea"
    case black = "Black tea"
    case fruit = "Fruit tea"}

var v2: [Tea:Double] = [.green:15, .black:20, .fruit:30]

var queue: [Tea] = [.green, .black, .green, .fruit , .green]
for (index, element) in queue.enumerated(){
    print(String(index+1) + " " + element.rawValue + " " + String(v2[element]!))
    
}

//Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. Необходимо создать новый массив, который будет состоять из элементов старого, но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию.
let a: [Int?] = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]
var b: [Int] = a.compactMap{ $0 }.filter{$0 != 0 && $0 != 4}.sorted { $1 > $0}

print(b)

//Написать функцию, которая на вход принимает целое число, а возвращает массив, который сформирован по следующим правилам: количество элементов соответствует переданному числу, массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза.
func buildArray(a: Int) -> [Int]{
    var b:[Int] = [1]
    var i = 1
    while i < a {
        b.append(b[i-1]*2)
        i+=1
    }
        return b
}
print(buildArray(a: 4))
